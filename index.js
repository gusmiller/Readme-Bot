/**
 * Carleton Bootcamp - 2023
 * Copyright 2023 Gustavo Miller
 * Licensed under MIT
 * Assignment - 09 Readme Bot
 * Date : 10/5/2023 2:06:08 PM
 * 
 * Description: the goal of this script is to build a Readme file using the different sections
 * that have been specified in the requirements. The areas require are as follow:
 *          Description, (done)
 *          Table of Contents,
 *          Installation, 
 *          Usage, 
 *          License, (done)
 *          Contributing,  
 *          Tests
 */

// Include packages needed for this application
const inquirer = require('inquirer');
const chalk = require('chalk');

// fs is a Node standard library package for reading and writing files
const fs = require('fs');

const questions = require('./utils/arrays.js');
const lorem = require('./utils/parragraphs.js');
const license = require('./utils/license.js');

let builder = {
    productname: "",
    projectdescription: "",
    includeimage: false,
    includelicense: false,
    instructions: "",
    commandline: "",
    badgeslist: [],
};

// TODO: Create a function to write README file
function writeToFile() {

    let buildfilesrting = "<a id=\"readme-top\" name=\"readme-top\"></a>"; // Instantiate file content

    fs.writeFile('Readme.md', buildfilesrting, (err) =>
        err ? console.error(err) : console.log('Success!')
    );

}

/**
 * Start the Readme questionnaire process; the goal is to achieve sections for Description, Table of Contents,
 * Installation, Usage, License, Contributing, and Tests. This is the start of a chain of events build on promises, 
 * each section will feed a global array of ojects that will be used to creae the Readme document. 
 * We start with the product name.
 */
const init = () => {

    inquirer.prompt(questions.packagename)
        .then((answer) => {
            if (answer.productname === "") {
                return;
            } else {
                builder.productname = answer.productname; // Store the product name in readme builder
                ProjectDescription(); // Retrieve project description
            }
        });
};

/**
 * This will ask questions about the project description. This could be filled automatically bor it can
 * be entered manually. The automatic way uses two Lorem Ipsum parragraphs autogenerated (https://loremipsum.io/generator/) 
 * to fill in the description.
 */
const ProjectDescription = () => {

    inquirer.prompt(questions.description)
        .then((answer) => {
            if (answer.loremdata === "Lorem Ipsum") {
                builder.projectdescription = `Description entered automatically by Lorem Ipsum. ${lorem.p1}\n${lorem.p2}`;
            } else {
                builder.projectdescription = answer.manualdata;
            }
            BadgeImages(); // Call Badges section
        });
}

/**
 * This section takes care of two items; whether the user is using an image and display badges. The image is aread
 * included in the package -there is no way select an image from the users computer or from the internet, perhaps in 
 * future version I can build that. User can select different badges available to select; the badges were retrieved
 * from https://shields.io/badges website. 
 */
const BadgeImages = () => {
    inquirer.prompt(questions.badgesquestions)
        .then((answer) => {
            builder.includeimage = answer.includeimage; // Store wheter image is needed
            if (answer.includebadge == true) {
                answer.badgeslist.forEach((badge) => {
                    builder.badgeslist.push(badge); // Store the badges selected
                });
            }
            AddLicenseSection(); // Call License questions
        });
}

/**
 * This section takes care of license section. For this example we are using the MIT license as it covers pretty much 
 * all we need to share the code. A short and simple permissive license with conditions only requiring  preservation of 
 * copyright and license notices. Licensed works, modifications, and larger works may be distributed under different 
 * terms and without source code. (ref: https://choosealicense.com/licenses/mit/)
 */
const AddLicenseSection = () => {
    inquirer.prompt(questions.license)
        .then((answer) => {
            if (answer.includelicense == true) {
                builder.includelicense = answer.includelicense // Store include license response
            }
            AddInstallation(); // Call Add installation questions
        });
}

/**
 * This section takes care of installation section, which is split in two; the first section will allow user to
 * enter the instructions and then the command line that will display as a code in the Readme file
 */
const AddInstallation = () => {
    inquirer.prompt(questions.installation)
        .then((answer) => {
            if (answer.includelicense == true) {
                builder.instructions = answer.instructions // Store instructions 
                builder.commandline = answer.commandline // Store command line
            }
            writeToFile();
        });
}

/**
 * Entry point for the application. File will trigger this when it finishes
 * loading
 */
init();
